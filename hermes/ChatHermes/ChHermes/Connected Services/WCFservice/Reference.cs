//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChHermes.WCFservice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContract", Namespace="http://schemas.datacontract.org/2004/07/ChatHermes.Contracts")]
    [System.SerializableAttribute()]
    public partial class UserContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessFailedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockoutEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LockoutEndDateUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhoneNumberConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TwoFactorEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessFailedCount {
            get {
                return this.AccessFailedCountField;
            }
            set {
                if ((this.AccessFailedCountField.Equals(value) != true)) {
                    this.AccessFailedCountField = value;
                    this.RaisePropertyChanged("AccessFailedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailConfirmed {
            get {
                return this.EmailConfirmedField;
            }
            set {
                if ((this.EmailConfirmedField.Equals(value) != true)) {
                    this.EmailConfirmedField = value;
                    this.RaisePropertyChanged("EmailConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockoutEnabled {
            get {
                return this.LockoutEnabledField;
            }
            set {
                if ((this.LockoutEnabledField.Equals(value) != true)) {
                    this.LockoutEnabledField = value;
                    this.RaisePropertyChanged("LockoutEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LockoutEndDateUtc {
            get {
                return this.LockoutEndDateUtcField;
            }
            set {
                if ((this.LockoutEndDateUtcField.Equals(value) != true)) {
                    this.LockoutEndDateUtcField = value;
                    this.RaisePropertyChanged("LockoutEndDateUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhoneNumberConfirmed {
            get {
                return this.PhoneNumberConfirmedField;
            }
            set {
                if ((this.PhoneNumberConfirmedField.Equals(value) != true)) {
                    this.PhoneNumberConfirmedField = value;
                    this.RaisePropertyChanged("PhoneNumberConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityStamp {
            get {
                return this.SecurityStampField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityStampField, value) != true)) {
                    this.SecurityStampField = value;
                    this.RaisePropertyChanged("SecurityStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TwoFactorEnable {
            get {
                return this.TwoFactorEnableField;
            }
            set {
                if ((this.TwoFactorEnableField.Equals(value) != true)) {
                    this.TwoFactorEnableField = value;
                    this.RaisePropertyChanged("TwoFactorEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFservice.IHermesService")]
    public interface IHermesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/GetAllUsers", ReplyAction="http://tempuri.org/IHermesService/GetAllUsersResponse")]
        ChHermes.WCFservice.UserContract[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/GetAllUsers", ReplyAction="http://tempuri.org/IHermesService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<ChHermes.WCFservice.UserContract[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/AddUser", ReplyAction="http://tempuri.org/IHermesService/AddUserResponse")]
        void AddUser(ChHermes.WCFservice.UserContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/AddUser", ReplyAction="http://tempuri.org/IHermesService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(ChHermes.WCFservice.UserContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/FindPassword", ReplyAction="http://tempuri.org/IHermesService/FindPasswordResponse")]
        string FindPassword(string inputEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/FindPassword", ReplyAction="http://tempuri.org/IHermesService/FindPasswordResponse")]
        System.Threading.Tasks.Task<string> FindPasswordAsync(string inputEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/GetEmail", ReplyAction="http://tempuri.org/IHermesService/GetEmailResponse")]
        bool GetEmail(string inputEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/GetEmail", ReplyAction="http://tempuri.org/IHermesService/GetEmailResponse")]
        System.Threading.Tasks.Task<bool> GetEmailAsync(string inputEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/UpdatePassword", ReplyAction="http://tempuri.org/IHermesService/UpdatePasswordResponse")]
        void UpdatePassword(string inputEmail, string inputPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/UpdatePassword", ReplyAction="http://tempuri.org/IHermesService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task UpdatePasswordAsync(string inputEmail, string inputPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/RegisterUser", ReplyAction="http://tempuri.org/IHermesService/RegisterUserResponse")]
        void RegisterUser(string UserName, string PassWord, string InputEmail, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/RegisterUser", ReplyAction="http://tempuri.org/IHermesService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(string UserName, string PassWord, string InputEmail, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/LoginQuery", ReplyAction="http://tempuri.org/IHermesService/LoginQueryResponse")]
        bool LoginQuery(string inputUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/LoginQuery", ReplyAction="http://tempuri.org/IHermesService/LoginQueryResponse")]
        System.Threading.Tasks.Task<bool> LoginQueryAsync(string inputUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/GetHashedPassowrd", ReplyAction="http://tempuri.org/IHermesService/GetHashedPassowrdResponse")]
        string GetHashedPassowrd(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/GetHashedPassowrd", ReplyAction="http://tempuri.org/IHermesService/GetHashedPassowrdResponse")]
        System.Threading.Tasks.Task<string> GetHashedPassowrdAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/GetUserID", ReplyAction="http://tempuri.org/IHermesService/GetUserIDResponse")]
        string GetUserID(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHermesService/GetUserID", ReplyAction="http://tempuri.org/IHermesService/GetUserIDResponse")]
        System.Threading.Tasks.Task<string> GetUserIDAsync(string UserName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHermesServiceChannel : ChHermes.WCFservice.IHermesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HermesServiceClient : System.ServiceModel.ClientBase<ChHermes.WCFservice.IHermesService>, ChHermes.WCFservice.IHermesService {
        
        public HermesServiceClient() {
        }
        
        public HermesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HermesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HermesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HermesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ChHermes.WCFservice.UserContract[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<ChHermes.WCFservice.UserContract[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public void AddUser(ChHermes.WCFservice.UserContract user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(ChHermes.WCFservice.UserContract user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public string FindPassword(string inputEmail) {
            return base.Channel.FindPassword(inputEmail);
        }
        
        public System.Threading.Tasks.Task<string> FindPasswordAsync(string inputEmail) {
            return base.Channel.FindPasswordAsync(inputEmail);
        }
        
        public bool GetEmail(string inputEmail) {
            return base.Channel.GetEmail(inputEmail);
        }
        
        public System.Threading.Tasks.Task<bool> GetEmailAsync(string inputEmail) {
            return base.Channel.GetEmailAsync(inputEmail);
        }
        
        public void UpdatePassword(string inputEmail, string inputPassword) {
            base.Channel.UpdatePassword(inputEmail, inputPassword);
        }
        
        public System.Threading.Tasks.Task UpdatePasswordAsync(string inputEmail, string inputPassword) {
            return base.Channel.UpdatePasswordAsync(inputEmail, inputPassword);
        }
        
        public void RegisterUser(string UserName, string PassWord, string InputEmail, string FirstName, string LastName) {
            base.Channel.RegisterUser(UserName, PassWord, InputEmail, FirstName, LastName);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(string UserName, string PassWord, string InputEmail, string FirstName, string LastName) {
            return base.Channel.RegisterUserAsync(UserName, PassWord, InputEmail, FirstName, LastName);
        }
        
        public bool LoginQuery(string inputUsername) {
            return base.Channel.LoginQuery(inputUsername);
        }
        
        public System.Threading.Tasks.Task<bool> LoginQueryAsync(string inputUsername) {
            return base.Channel.LoginQueryAsync(inputUsername);
        }
        
        public string GetHashedPassowrd(string UserName) {
            return base.Channel.GetHashedPassowrd(UserName);
        }
        
        public System.Threading.Tasks.Task<string> GetHashedPassowrdAsync(string UserName) {
            return base.Channel.GetHashedPassowrdAsync(UserName);
        }
        
        public string GetUserID(string UserName) {
            return base.Channel.GetUserID(UserName);
        }
        
        public System.Threading.Tasks.Task<string> GetUserIDAsync(string UserName) {
            return base.Channel.GetUserIDAsync(UserName);
        }
    }
}
